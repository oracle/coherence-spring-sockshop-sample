<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021, 2024 Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.oracle.coherence.examples.sockshop.spring</groupId>
        <artifactId>sockshop-parent</artifactId>
        <version>1.3.1-SNAPSHOT</version>
    </parent>

    <artifactId>orders</artifactId>
    <name>orders</name>
    <description>Orders service for Spring Sock Shop demo application</description>

    <dependencies>
        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- dependencies -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-micrometer</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${version.lib.springdoc-openapi}</version>
        </dependency>

        <!-- Coherence dependencies -->
        <dependency>
            <groupId>com.oracle.coherence.spring</groupId>
            <artifactId>coherence-spring-boot-starter</artifactId>
            <version>${version.lib.coherence-spring}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>

        <!-- tracing dependencies -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${version.lib.awaitility}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.spring</groupId>
            <artifactId>coherence-spring-tests</artifactId>
            <version>${version.lib.coherence-spring}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.lib.rest-assured}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.bedrock</groupId>
            <artifactId>bedrock-testing-support</artifactId>
            <version>${version.lib.bedrock}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.spring.sockshop</groupId>
            <artifactId>sockshop-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${version.lib.spring-boot}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.plugin.maven-jar}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>container</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${version.plugin.jib}</version>
                        <configuration>
                            <from>
                                <image>gcr.io/distroless/java17-debian11</image>
                            </from>
                            <to>
                                <image>${container.repo}-${project.artifactId}</image>
                                <tags>
                                    <tag>${container.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <!-- good defaults intended for containers -->
                                <jvmFlags>
                                    <jvmFlag>-server</jvmFlag>
                                    <jvmFlag>-Djava.awt.headless=true</jvmFlag>
                                    <jvmFlag>-XshowSettings:all</jvmFlag>
                                    <jvmFlag>-XX:+PrintCommandLineFlags</jvmFlag>
                                    <jvmFlag>-XX:+UnlockDiagnosticVMOptions</jvmFlag>
                                    <jvmFlag>-XX:InitialRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MinRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MaxRAMPercentage=70</jvmFlag>
                                </jvmFlags>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
