<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021, 2025 Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.oracle.coherence.examples.sockshop.spring</groupId>
		<artifactId>sockshop-parent</artifactId>
		<version>1.5.2-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.oracle.coherence.spring.sockshop</groupId>
	<artifactId>users</artifactId>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${version.lib.springdoc-openapi}</version>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.oracle.coherence.spring</groupId>
			<artifactId>coherence-spring-boot-starter</artifactId>
			<version>${version.lib.coherence-spring}</version>
		</dependency>
		<dependency>
			<groupId>com.oracle.coherence.spring</groupId>
			<artifactId>coherence-spring-data</artifactId>
			<version>${version.lib.coherence-spring}</version>
		</dependency>
		<dependency>
			<groupId>com.oracle.coherence.ce</groupId>
			<artifactId>coherence</artifactId>
			<version>${version.lib.coherence}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- tracing dependencies -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-reporter-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-spring-jaeger-cloud-starter</artifactId>
			<version>${version.lib.opentracing-spring-jaeger}</version>
		</dependency>
		<!-- Force this transitive dependency -->
		<dependency>
			<groupId>io.jaegertracing</groupId>
			<artifactId>jaeger-thrift</artifactId>
			<version>${version.lib.jaeger-client}</version>
		</dependency>

		<!-- -->
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<version>${version.lib.httpclient}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- force this version of dependency -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${version.lib.jackson}</version>
		</dependency>
		<dependency>
			<artifactId>logback-core</artifactId>
			<groupId>ch.qos.logback</groupId>
			<version>${version.lib.logback}</version>
		</dependency>
		<dependency>
			<artifactId>logback-classic</artifactId>
			<groupId>ch.qos.logback</groupId>
			<version>${version.lib.logback}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${version.lib.okhttp}</version>
		</dependency>

		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${version.lib.awaitility}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.coherence.spring.sockshop</groupId>
			<artifactId>sockshop-test</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${version.lib.spring-boot}</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>container</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>${version.plugin.jib}</version>
						<configuration>
							<from>
								<image>gcr.io/distroless/java17-debian11</image>
							</from>
							<to>
								<image>${container.repo}-${project.artifactId}</image>
								<tags>
									<tag>${container.version}</tag>
								</tags>
							</to>
							<container>
								<!-- good defaults intended for containers -->
								<jvmFlags>
									<jvmFlag>-server</jvmFlag>
									<jvmFlag>-Djava.awt.headless=true</jvmFlag>
									<jvmFlag>-XshowSettings:all</jvmFlag>
									<jvmFlag>-XX:+PrintCommandLineFlags</jvmFlag>
									<jvmFlag>-XX:+UnlockDiagnosticVMOptions</jvmFlag>
									<jvmFlag>-XX:InitialRAMPercentage=70</jvmFlag>
									<jvmFlag>-XX:MinRAMPercentage=70</jvmFlag>
									<jvmFlag>-XX:MaxRAMPercentage=70</jvmFlag>
								</jvmFlags>
								<ports>
									<port>8080</port>
								</ports>
								<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
							</container>
							<containerizingMode>packaged</containerizingMode>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>${jib.goal}</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
